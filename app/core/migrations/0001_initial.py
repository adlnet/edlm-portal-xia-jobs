# Generated by Django 3.2.25 on 2024-09-17 15:25

import uuid

import django.core.validators
import django.utils.timezone
import model_utils.fields
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ECCRConfiguration',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('eccr_api_endpoint', models.CharField(help_text='Enter the ECCR API endpoint', max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='MetadataFieldOverwrite',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('field_name', models.CharField(max_length=200)),
                ('field_type', models.CharField(choices=[('datetime', 'DATETIME'), ('int', 'INTEGER'), ('str', 'CHARACTER'), ('bool', 'BOOLEAN')], max_length=200, null=True)),
                ('field_value', models.CharField(max_length=200, null=True)),
                ('overwrite', models.BooleanField(default=False)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MetadataLedger',
            fields=[
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('metadata_record_inactivation_date', models.DateTimeField(blank=True, null=True)),
                ('metadata_record_uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('record_lifecycle_status', models.CharField(blank=True, choices=[('Active', 'A'), ('Inactive', 'I')], max_length=10)),
                ('source_metadata', models.JSONField(blank=True, validators=[django.core.validators.RegexValidator(message='The Wrong Format Entered', regex='(?!(\\A( \\x09\\x0A\\x0D\\x20-\\x7E # ASCII | \\xC2-\\xDF # non-overlong 2-byte | \\xE0\\xA0-\\xBF # excluding overlongs | \\xE1-\\xEC\\xEE\\xEF{2} # straight 3-byte | \\xED\\x80-\\x9F # excluding surrogates | \\xF0\\x90-\\xBF{2} # planes 1-3 | \\xF1-\\xF3{3} # planes 4-15 | \\xF4\\x80-\\x8F{2} # plane 16 )*\\Z))')])),
                ('source_metadata_extraction_date', models.DateTimeField(auto_now_add=True)),
                ('source_metadata_hash', models.CharField(max_length=200)),
                ('source_metadata_key', models.TextField()),
                ('source_metadata_key_hash', models.CharField(max_length=200)),
                ('source_metadata_transformation_date', models.DateTimeField(blank=True, null=True)),
                ('source_metadata_validation_date', models.DateTimeField(blank=True, null=True)),
                ('source_metadata_validation_status', models.CharField(blank=True, choices=[('Y', 'Yes'), ('N', 'No')], max_length=10)),
                ('target_metadata', models.JSONField(default=dict)),
                ('target_metadata_hash', models.CharField(max_length=200)),
                ('target_metadata_key', models.TextField()),
                ('target_metadata_key_hash', models.CharField(max_length=200)),
                ('target_metadata_transmission_date', models.DateTimeField(blank=True, null=True)),
                ('target_metadata_transmission_status', models.CharField(blank=True, choices=[('Successful', 'S'), ('Failed', 'F'), ('Pending', 'P'), ('Ready', 'R')], default='Ready', max_length=10)),
                ('target_metadata_transmission_status_code', models.IntegerField(blank=True, null=True)),
                ('target_metadata_validation_date', models.DateTimeField(blank=True, null=True)),
                ('target_metadata_validation_status', models.CharField(blank=True, choices=[('Y', 'Yes'), ('N', 'No')], max_length=10)),
                ('eccr_uuid', models.TextField(blank=True, null=True)),
                ('code', models.CharField(blank=True, max_length=200, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='XIAConfiguration',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('publisher', models.CharField(help_text='Enter the publisher name', max_length=200)),
                ('xss_api', models.CharField(help_text='Enter the XSS API', max_length=200)),
                ('source_metadata_schema', models.CharField(help_text='Enter the schema name/IRI', max_length=200)),
                ('target_metadata_schema', models.CharField(help_text='Enter the target schema name/IRI to validate from.', max_length=200)),
                ('source_file', models.FileField(help_text='Upload the source file', upload_to='')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='XISConfiguration',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('xis_metadata_api_endpoint', models.CharField(help_text='Enter the XIS Metadata Ledger API endpoint', max_length=200)),
                ('xis_api_key', models.CharField(help_text='Enter the XIS API Key', max_length=128)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='XSRConfiguration',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('xsr_api_endpoint', models.CharField(help_text='Enter the XSR API endpoint', max_length=200)),
                ('token', models.CharField(help_text='Enter the XSR Token', max_length=200)),
            ],
        ),
    ]
